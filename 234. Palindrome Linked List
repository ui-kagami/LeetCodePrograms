/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode f = head;
        ListNode s = head;
        
        while(f != null && f.next != null){
            s = s.next;
            f = f.next.next;
        }
        
        s = reverse(s);
        f = head;
        
        while(s != null){
            if(s.val != f.val){
                return false;
            }
            s = s.next;
            f = f.next;
        }
        
        return true;
    }
    
    public ListNode reverse(ListNode a){
        ListNode prev = null;
        ListNode nx;
        
        while(a != null){
            nx = a.next;
            a.next = prev;
            prev = a;
            a = nx;
        }
        
        return prev;
    }
}
